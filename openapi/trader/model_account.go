/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trader

import (
	"encoding/json"
)

// checks if the Account type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Account{}

// Account struct for Account
type Account struct {
	SecuritiesAccount *SecuritiesAccount `json:"securitiesAccount,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount() *Account {
	this := Account{}
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetSecuritiesAccount returns the SecuritiesAccount field value if set, zero value otherwise.
func (o *Account) GetSecuritiesAccount() SecuritiesAccount {
	if o == nil || IsNil(o.SecuritiesAccount) {
		var ret SecuritiesAccount
		return ret
	}
	return *o.SecuritiesAccount
}

// GetSecuritiesAccountOk returns a tuple with the SecuritiesAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetSecuritiesAccountOk() (*SecuritiesAccount, bool) {
	if o == nil || IsNil(o.SecuritiesAccount) {
		return nil, false
	}
	return o.SecuritiesAccount, true
}

// HasSecuritiesAccount returns a boolean if a field has been set.
func (o *Account) HasSecuritiesAccount() bool {
	if o != nil && !IsNil(o.SecuritiesAccount) {
		return true
	}

	return false
}

// SetSecuritiesAccount gets a reference to the given SecuritiesAccount and assigns it to the SecuritiesAccount field.
func (o *Account) SetSecuritiesAccount(v SecuritiesAccount) {
	o.SecuritiesAccount = &v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Account) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecuritiesAccount) {
		toSerialize["securitiesAccount"] = o.SecuritiesAccount
	}
	return toSerialize, nil
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


